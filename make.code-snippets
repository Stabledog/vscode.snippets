{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
    "realpath extraction": {
        "scope": "makefile",
        "description": "Get the canonical dir for current Makefile",
        "prefix": ["realpath","readlink","abspath"],
        "body": [
            "# See https://stackoverflow.com/a/73509979/237059",
            "absdir:=\\$(dir \\$(realpath \\$(lastword \\$(MAKEFILE_LIST))))",
        ]
    },
    "phony targets declaration": {
        "scope": "makefile",
        "description": "Declare .PHONY target names",
        "prefix": [".PHONY","phony"],
        "body":[
            ".PHONY: phony1 phony2"
        ]
    },
    "list-targets": {
        "description": "Add a list-targets target within a makefile.  See also the brilliant description in https://stackoverflow.com/a/26339924/237059",
        "prefix": ["list-targets"],
        "scope": "makefile",
        "body": [
            ".PHONY: list",
            "list:",
            "    @LC_ALL=C \\$(MAKE) -pRrq -f \\$(lastword \\$(MAKEFILE_LIST)) : 2>/dev/null | awk -v RS= -F: '/(^|\n)# Files(\n|\\$\\$)/,/(^|\n)# Finished Make data base/ {if (\\$\\$1 !~ \"^[#.]\") {print \\$\\$1}}' | sort | egrep -v -e '^[^[:alnum:]]' -e '^\\$@\\$\\$'",
        ]
    },
}
