{
    "make_makefile": {
        "description": "Create generic makefile",
        "prefix": ["_make_makefile"], // Multiple prefixes may be defined
        "body": [
            "# task Makefile",
            "SHELL=/bin/bash",
            ".ONESHELL:",
            "# Add \\$(Ps4x) to the top of a recipe to get debug output on stderr:",
            "Ps4=@PS4='+\\$\\$?| \\$@:\\$\\${LINENO}> '",
            "Ps4x=\\$(Ps4); set -x;",
            "",
            "# TODO: rename absdir to something more meaningful",
            "absdir := \\$(dir \\$(realpath \\$(lastword \\$(MAKEFILE_LIST))))",
            "# For recursion:",
            "Remake := make -f \\$(absdir)Makefile",
            "",
            "# The first target should generally be 'Config', and its dependencies should",
            "# only output shell \"eval-able\" text:",
            "Config: .cfg.cur",
            "",
            "# TODO: rename .cfg.cur to something more meaningful",
            ".cfg.cur:",
            "\t@# Configuration for current makefile",
            "\techo Remake=\\\"$(Remake)\\\"",
            "\techo absdir=\\$(absdir)",
            "",
            "bash.here:",
            "\t@# Launch a shell after building an environment based on our \"Config\" target",
            "\t\\$(Ps4x)",
            "\tset -ue",
            "\tenvfile=/tmp/env-bash-here.\\$\\$\\$\\$",
            "\t{",
            "\t\techo \"source \\$\\${HOME}/.bashrc\";",
            "\t\t\\$(Remake) -s",
            "\t\techo \"Ps1Tail=bash.here\";",
            "\t\techo \"export envfile=\\$\\$envfile\";",
            "\t} > \\$\\$envfile",
            "\tbash --rcfile \\$\\$envfile",
            "",
        ]
    },
}
